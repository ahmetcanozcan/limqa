version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12
      # CircleCI RabbitMQ images available at: https://hub.docker.com/r/circleci/rabbitmq
      - image: circleci/rabbitmq:latest

    parallelism: 2

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      #  Wait for RabbitMQ to be ready before proceeding
      - run:
          name: Waiting for RabbitMQ to be ready
          command: dockerize -wait tcp://localhost:5672 -timeout 1m

      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - run: make # pull and build dependencies for the project

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
